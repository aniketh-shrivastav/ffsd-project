<!-- productManagement.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Product Management</title>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet"/>
  <link href="/Css/CStyle.css" rel="stylesheet"/>
  <style>

  /* General Styles */
body {
    font-family: 'Poppins', sans-serif;
    background: linear-gradient(135deg, #f5f7fa, #c3cfe2);
    color: #333;
    margin: 0;
    padding: 0;
    line-height: 1.6;
}

/* Google Fonts */
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

header {
    background: linear-gradient(135deg, #6a11cb, #2575fc);
    color: white;
    padding: 30px 20px;
    text-align: center;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

header h1 {
    margin: 0;
    font-size: 2.5em;
    font-weight: 600;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
}

/* Product Management heading - full width box */
.container > h1:first-of-type {
    background: linear-gradient(135deg, #6a11cb, #2575fc);
    color: rgb(72, 70, 70);
    padding: 20px;
    margin: -20px -20px 30px -20px;
    width: calc(100% + 40px);
    text-align: center;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    font-size: 2.5rem;
    font-weight: 700;
    position: relative;
    left: 0;
}

h2 {
    color: #6a11cb;
    margin-bottom: 20px;
    font-size: 1.5em;
    font-weight: 600;
}

/* Form Styles */
.product-form {
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    padding: 25px;
    margin-bottom: 30px;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.product-form:hover {
    transform: translateY(-10px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

.form-group {
    margin-bottom: 20px;
}

.form-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: 600;
    color: #6a11cb;
}

.form-group input,
.form-group textarea {
    width: 100%;
    padding: 15px;
    border: 1px solid #ddd;
    border-radius: 8px;
    font-size: 1em;
    box-sizing: border-box;
    transition: border-color 0.3s ease;
    font-family: 'Poppins', sans-serif;
}

.form-group input:focus,
.form-group textarea:focus {
    border-color: #6a11cb;
    outline: none;
    box-shadow: 0 0 0 2px rgba(106, 17, 203, 0.2);
}

.form-group textarea {
    resize: vertical;
    min-height: 100px;
}

.btn-add {
    background: linear-gradient(135deg, #6a11cb, #2575fc);
    color: white;
    border: none;
    padding: 15px 25px;
    font-size: 1em;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
    width: 100%;
    font-weight: 600;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.btn-add:hover {
    background: linear-gradient(135deg, #5c0fb3, #2169e8);
    transform: translateY(-2px);
    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
}

.btn-add:active {
    transform: translateY(0);
}

/* Product List Styles */
.product-list {
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    padding: 25px;
}

.product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 20px;
}

.product-card {
    background: #f9f9f9;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    padding: 20px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border-left: 4px solid #6a11cb;
}

.product-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

.product-details h3 {
    margin: 0 0 10px;
    color: #6a11cb;
    font-size: 1.5rem;
    font-weight: 600;
}

.product-details p {
    margin: 5px 0;
    color: #555;
}

.btn-delete {
    background: linear-gradient(135deg, #ff6f61, #ff4757);
    color: white;
    border: none;
    padding: 8px 15px;
    font-size: 0.9em;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
    align-self: flex-end;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    font-weight: 500;
}

.btn-delete:hover {
    background: linear-gradient(135deg, #ff4757, #ff3545);
    transform: translateY(-2px);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.15);
}

.btn-delete:active {
    transform: translateY(0);
}

.no-products {
    text-align: center;
    color: #888;
    font-style: italic;
    font-size: 1.2rem;
    padding: 20px;
}

/* Stats Section */
.stats {
    display: flex;
    justify-content: space-around;
    margin-bottom: 30px;
    flex-wrap: wrap;
    gap: 20px;
}

.card {
    background: linear-gradient(135deg, #6a11cb, #2575fc);
    border-radius: 12px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    padding: 25px;
    width: 30%;
    text-align: center;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    color: white;
}

.card:hover {
    transform: translateY(-10px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

.card h2 {
    margin-top: 0;
    font-size: 1.5em;
    font-weight: 600;
    color: white;
}

.card p {
    font-size: 1.2em;
    margin: 10px 0;
}

/* Footer Styles */
footer {
    background: linear-gradient(135deg, #6a11cb, #2575fc);
    color: white;
    text-align: center;
    padding: 15px;
    position: fixed;
    bottom: 0;
    width: 100%;
    box-shadow: 0 -4px 6px rgba(0, 0, 0, 0.1);
}

footer p {
    margin: 0;
    font-size: 1em;
    font-weight: 500;
}

/* Responsive Styles */
@media (max-width: 768px) {
    .product-grid {
        grid-template-columns: 1fr;
    }
    
    .card {
        width: 100%;
        margin-bottom: 15px;
    }
    
    .container > h1:first-of-type {
        font-size: 2em;
        padding: 15px;
    }
    
    h2 {
        font-size: 1.5em;
    }
    
    .container {
        padding: 15px;
    }
}
  </style>
</head>
<body>

  <%- include('../partials/navbar') %>

  <div class="container">
    <h1>Product Management</h1>

    <!-- Product Input Form -->
    <form action="/Seller/add-product" method="POST" enctype="multipart/form-data" class="product-form" id="productForm">
      <div class="form-group">
        <label for="productName">Product Name:</label>
        <input type="text" id="productName" name="name" required>
      </div>
      <div class="form-group">
        <label for="productPrice">Product Price (₹):</label>
        <input type="number" id="productPrice" name="price" step="0.01" required>
      </div>
      <div class="form-group">
        <label for="productDescription">Product Description:</label>
        <textarea id="productDescription" name="description" rows="3" required></textarea>
      </div>
      <div class="form-group">
        <label for="productCategory">Product Category:</label>
        <input type="text" id="productCategory" name="category" required>
      </div>
      <div class="form-group">
        <label for="productBrand">Product Brand:</label>
        <input type="text" id="productBrand" name="brand" required>
      </div>
      <div class="form-group">
        <label for="productQuantity">Product Quantity:</label>
        <input type="number" id="productQuantity" name="quantity" required>
      </div>
      <div class="form-group">
        <label for="productSKU">Product SKU:</label>
        <input type="text" id="productSKU" name="sku" maxlength="6" required>
      </div>

      <!-- Compatibility Field -->
      <div class="form-group">
        <label for="compatibility">Compatibility</label>
        <input
          type="text"
          class="form-control"
          id="compatibility"
          name="compatibility"
          placeholder="Enter compatible devices or models"
        />
      </div>

      <!-- Product Image Upload -->
      <div class="form-group">
        <label for="productImage">Product Image:</label>
        <input type="file" id="productImage" name="image" accept="image/*" required />
      </div>

      <button type="submit" class="btn-add">Add Product</button>
    </form>

    <!-- Product List -->
    <div class="product-list">
      <h2>Product List</h2>
      <% if (products1.length > 0) { %>
        <div class="product-grid">
          <% products1.forEach(product => { %>
            <div class="product-card">
              <div class="product-details">
                <h3><%= product.name %></h3>
                <p><strong>Price:</strong> ₹<%= product.price %></p>
                <p><strong>Description:</strong> <%= product.description %></p>
                <p><strong>Category:</strong> <%= product.category %></p>
                <p><strong>Brand:</strong> <%= product.brand %></p>
                <p><strong>Quantity:</strong> <%= product.quantity %></p>
                <p><strong>SKU:</strong> <%= product.sku %></p>
              </div>
              <form action="/Seller/delete-product/<%= product.id %>" method="POST">
                <button type="submit" class="btn-delete">Delete</button>
              </form>
            </div>
          <% }) %>
        </div>
      <% } else { %>
        <p class="no-products">No products found.</p>
      <% } %>
    </div>
  </div>

  <!-- Form Validation Script -->
  <script>
    document.getElementById('productForm').addEventListener('submit', function (event) {
      if (!validateForm()) {
        event.preventDefault();
      }
    });

    function validateForm() {
      const fields = [
        document.getElementById('productName'),
        document.getElementById('productCategory'),
        document.getElementById('productBrand'),
        document.getElementById('productDescription'),
        document.getElementById('productSKU')
      ];

      for (const field of fields) {
        if (!field.value.trim()) {
          alert(`Please enter a valid ${field.previousElementSibling.innerText}.`);
          return false;
        }
      }

      const productPrice = document.getElementById('productPrice');
      const productQuantity = document.getElementById('productQuantity');

      fields[0].value = fields[0].value.toUpperCase();
      fields[1].value = fields[1].value.toUpperCase();

      if (!Number.isInteger(parseFloat(productQuantity.value))) {
        alert('Quantity must be an integer.');
        return false;
      }

      const priceRegex = /^\d+(\.\d{1,2})?$/;
      if (!priceRegex.test(productPrice.value)) {
        alert('Price must be a number with up to 2 decimal places.');
        return false;
      }

      if (fields[4].value.length !== 6) {
        alert('SKU must be exactly 6 characters.');
        return false;
      }

      return true;
    }
  </script>
</body>
</html>